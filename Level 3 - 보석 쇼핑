import java.util.*;
class Solution {
    public int[] solution(String[] gems) {
        int[] answer = new int[2];
        HashSet<String> hashSet = new HashSet<>(Arrays.asList(gems));
        HashMap<String, Integer> temp = new HashMap<>();
        if(hashSet.size() == 1)
            return new int[]{1,1};
        int n = gems.length;
        int start = 0;
        int end = 0;
        int left = 0;
        int right = 0;
        int d = Integer.MAX_VALUE;
        while(true){
            if(temp.size() == hashSet.size()){
                temp.put(gems[left], temp.getOrDefault(gems[left], 0) - 1);
                if(temp.get(gems[left]) == 0)
                    temp.remove(gems[left]);
                left++;
            }else if(right == n)
                break;
            else{
                if(right < n){
                    temp.put(gems[right], temp.getOrDefault(gems[right], 0) + 1);
                    right++;
                }
            }
            if(temp.size() == hashSet.size() && right - left < d){
                d = right - left;
                start = left;
                end = right;
            }
        }
        answer[0] = start + 1;
        answer[1] = end;
        return answer;
    }
}
