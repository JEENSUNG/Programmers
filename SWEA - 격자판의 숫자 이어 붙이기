import java.util.*;
class Solution{
    static String[][] arr;
    static HashMap<Integer, Integer> hashMap = new HashMap<>();
    static int[][] dir = {{-1,0}, {1,0}, {0,1}, {0,-1}};
    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        int t = scan.nextInt();
        for (int test_case = 1; test_case <= t; test_case++) {
            arr = new String[4][4];
            hashMap = new HashMap<>();
            for(int i = 0; i < 4; i++)
                for(int j = 0; j < 4; j++)
                    arr[i][j] = scan.next();
            for(int i = 0; i < 4; i++)
                for(int j = 0; j < 4; j++)
                    bfs(i,j,0, arr[i][j]);
            System.out.println("#" + test_case + " " + hashMap.size());
        }
    }
    static void bfs(int x, int y, int count, String str){
        if(count == 6){
            int t = Integer.parseInt(str);
            if(!hashMap.containsKey(t))
                hashMap.put(t, 0);
            return;
        }
        for(int i = 0; i < 4; i++){
            int nx = x + dir[i][0];
            int ny = y + dir[i][1];
            if(nx < 0 || ny < 0 || nx >= 4 || ny >= 4)
                continue;
            String temp = str + arr[nx][ny];
            bfs(nx , ny, count + 1, temp);
        }
    }
}
